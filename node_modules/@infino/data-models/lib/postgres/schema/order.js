const { DataTypes } = require( 'sequelize' );

module.exports = {

    id: {
        allowNull: false,
        primaryKey: true,
        type: DataTypes.UUID,
        defaultValue: DataTypes.UUIDV4,
    },

    userId: {
        allowNull: false,
        type: DataTypes.UUID,
        references: {
            model: 'users',
            key: 'id',
            onDelete: 'CASCADE',
        }
    },

    paymentMethodId: {
        allowNull: false,
        type: DataTypes.UUID,
        references: {
            model: 'payment_methods',
            key: 'id',
            onDelete: 'CASCADE',
        }
    },

    providerId: {
        allowNull: false,
        type: DataTypes.UUID,
        references: {
            model: 'providers',
            key: 'id',
            onDelete: 'CASCADE',
        }
    },

    giftcardId: {
        allowNull: false,
        type: DataTypes.UUID,
        references: {
            model: 'giftcards',
            key: 'id',
            onDelete: 'CASCADE',
        }
    },

    amount: {
        allowNull: false,
        type: DataTypes.FLOAT,
    },

    profitAmount: {
        allowNull: false,
        type: DataTypes.FLOAT,
    },

    profitPercentage: {
        allowNull: false,
        type: DataTypes.FLOAT,
    },

    payableAmount: {
        allowNull: false,
        type: DataTypes.FLOAT,
    },

    isConsumed: {
        allowNull: false,
        type: DataTypes.BOOLEAN,
        defaultValue: false,
    },

    orderStatus: {
        type: DataTypes.ENUM( // eslint-disable-line new-cap
            'CREATED',
            'PAYMENT_FAILED',
            'UPSTREAM_QUANTITY_NOT_AVAILABLE',
            'GENERATION_TIMEOUT',
            'INVALID_DENOMINATION',
            'COMPLETE',
            'GYFTR_ERROR'
        ),
        defaultValue: 'CREATED',
        allowNull: false,
    },

    temporaryGiftcardDetails: {
        type: DataTypes.JSONB,
        allowNull: true,
    },

    createdAt: {
        allowNull: false,
        type: DataTypes.DATE,
        defaultValue: DataTypes.NOW,
    },

    updatedAt: {
        allowNull: false,
        type: DataTypes.DATE,
        defaultValue: DataTypes.NOW,
    },

};
