const { DataTypes } = require( 'sequelize' );

module.exports = {

    id: {
        allowNull: false,
        primaryKey: true,
        type: DataTypes.UUID,
        defaultValue: DataTypes.UUIDV4,
    },

    providerId: {
        allowNull: false,
        type: DataTypes.UUID,
        onDelete: 'CASCADE',
        references: {
            model: 'providers',
            key: 'id',
        }
    },

    merchantId: {
        allowNull: false,
        type: DataTypes.UUID,
        onDelete: 'CASCADE',
        references: {
            model: 'online_merchants',
            key: 'id',
        }
    },

    giftcardName: {
        allowNull: false,
        type: DataTypes.STRING,
    },

    maxClubbableQuantity: {
        allowNull: false,
        type: DataTypes.INTEGER,
    },

    baseCommission: {
        allowNull: false,
        type: DataTypes.FLOAT
    },

    sellingRate: {
        allowNull: false,
        type: DataTypes.FLOAT
    },

    about: {
        allowNull: true,
        type: DataTypes.STRING
    },

    expiry: {
        allowNull: false,
        type: DataTypes.STRING,
    },

    redemptionInstructions: {
        allowNull: false,
        type: DataTypes.STRING,
    },

    applicability: {
        allowNull: false,
        type: DataTypes.STRING,
    },

    redemptionLink: {
        allowNull: true,
        type: DataTypes.STRING,
    },

    saleApplicability: {
        allowNull: false,
        type: DataTypes.BOOLEAN,
        defaultValue: false,
    },

    exclusiveOnline: {
        allowNull: false,
        type: DataTypes.BOOLEAN,
        defaultValue: false,
    },

    exclusiveOffline: {
        allowNull: false,
        type: DataTypes.BOOLEAN,
        defaultValue: false,
    },

    tncUrl: {
        allowNull: true,
        type: DataTypes.STRING,
    },

    denominationType: {
        allowNull: false,
        type: DataTypes.ENUM,
        values: [ 'RANGE', 'SLAB', 'GYFTR_SLAB' ]
    },

    validity: {
        allowNull: true,
        type: DataTypes.STRING
    },

    createdAt: {
        allowNull: false,
        type: DataTypes.DATE,
        defaultValue: DataTypes.NOW,
    },

    updatedAt: {
        allowNull: false,
        type: DataTypes.DATE,
    }

};
